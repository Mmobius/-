using System;

public class Program
{
    public static void Main()
    {
        Console.WriteLine(Steps.CountVariants(0));
    }
}


public static class Steps
{

    static long PiNotation(int firstFactor, int lastFactor)
    {
        long piNotation = 1;
        for (int f = firstFactor; f <= lastFactor; f++)
        {
            piNotation *= f;
        }

        return piNotation;
    }

    static long Combination(int n, int k)
    {
        //C(n,k)=n!/k!*(n-k)!
        //შეგვიძლია მრიცხველი შევკვეცოთ მნიშვნელის თანამამრავლიდან უდიდესზე
        //ამით დროს მოვიგებთ.
        // C(n,k)=[(n-k+1)*(n-k+2)*...*n]/k!
        int min = Math.Min(n - k, k);
        int max = Math.Max(n - k, k);

        return PiNotation(max + 1, n) / PiNotation(1, min);
    }

    public static long CountVariants(int steps)
    {
        long variants = 1;
        
        if (steps <= 0)
        {
            throw new IndexOutOfRangeException("საფეხურები რაოდენობა მეტი უნდა იყოს 0-ზე");
        } 
        else 
        {
            //გვაქვს n საფეხური 
            //ვარიანტების გამოსათვლელად ვიყენებთ შემდეგ ფორმულას
            //variants=C(n,0)+C(n-1,1)+C(n-2,2)+..+C(n-r,r)
            //სადაც r=n/2		

            for (int r = 1; r <= steps / 2; r++)
            {
                variants += Combination(steps - r, r);
            }
        }
        
        return variants;
    }

}
























